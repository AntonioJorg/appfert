# --- IMPORTS PRINCIPAIS ---
import streamlit as st
import requests
import math
import datetime

# ==============================================================================
# M√ìDULO 2: BASE DE CONHECIMENTO (O "Receitu√°rio")
# (Copiar exatamente como estava)
# ==============================================================================
receituario_agronomico = {
    "Vegetativo": {
        "ec_ideal_solucao": 2.2,
        "ph_ideal_solucao": 5.8,
        "meta_deficit_pressao_vapor_kpa": 1.0,
        "kc": 0.6
    },
    "Florescimento": {
        "ec_ideal_solucao": 2.4,
        "ph_ideal_solucao": 5.8,
        "meta_deficit_pressao_vapor_kpa": 1.2,
        "kc": 0.8
    },
    "Frutifica√ß√£o Inicial": {
        "ec_ideal_solucao": 2.5,
        "ph_ideal_solucao": 5.8,
        "meta_deficit_pressao_vapor_kpa": 1.2,
        "kc": 1.0
    },
    "Plena Frutifica√ß√£o/Colheita": {
        "ec_ideal_solucao": 2.8,
        "ph_ideal_solucao": 5.8,
        "meta_deficit_pressao_vapor_kpa": 1.3,
        "kc": 1.15
    }
}

# ==============================================================================
# M√ìDULO 3: FUN√á√ïES DA API DE CLIMA
# (Copiar exatamente como estava - V4 Corrigida)
# ==============================================================================
def get_lat_long(cidade, estado):
    try:
        url_geocoding = f"https://geocoding-api.open-meteo.com/v1/search"
        params = {"name": cidade, "admin1": estado, "count": 1, "language": "pt", "format": "json"}
        response = requests.get(url_geocoding, params=params)
        response.raise_for_status() 
        data = response.json()
        if "results" in data and len(data["results"]) > 0:
            result = data["results"][0]
            return result["latitude"], result["longitude"], result.get("name", cidade)
        else:
            st.error(f"Erro: Cidade '{cidade}, {estado}' n√£o encontrada.")
            return None, None, None
    except requests.exceptions.RequestException as e:
        st.error(f"Erro ao conectar √† API de geocoding: {e}")
        return None, None, None

def get_previsao_clima(lat, long):
    if lat is None or long is None: return None
    try:
        url_forecast = "https://api.open-meteo.com/v1/forecast"
        params = {
            "latitude": lat,
            "longitude": long,
            "daily": "shortwave_radiation_sum,temperature_2m_max,temperature_2m_min",
            "timezone": "auto",
            "forecast_days": 1
        }
        response = requests.get(url_forecast, params=params)
        response.raise_for_status()
        data = response.json()
        if "daily" in data:
            return {
                "solar_radiation_sum": data["daily"]["shortwave_radiation_sum"][0], 
                "temp_max_externa": data["daily"]["temperature_2m_max"][0],
                "temp_min_externa": data["daily"]["temperature_2m_min"][0]
            }
        else:
            st.error("Erro: Resposta da API de clima n√£o cont√©m dados 'daily'.")
            return None
    except requests.exceptions.RequestException as e:
        st.error(f"Erro ao conectar √† API de clima: {e}")
        return None

# ==============================================================================
# M√ìDULO 4: FUN√á√ïES DO "C√âREBRO" (C√°lculos)
# (Copiar exatamente como estava)
# ==============================================================================
TRANSMISSIVIDADE_ESTUFA = 0.70
DENSIDADE_PLANTAS = 3.0
FATOR_CONVERSAO_RADIACAO_ETO = 0.408
FRACAO_LIXIVIACAO = 1.20

def calcular_dvp(temperatura, umidade_relativa):
    if umidade_relativa <= 0 or umidade_relativa > 100: return 0.0
    pvs = 0.6108 * math.exp((17.27 * temperatura) / (temperatura + 237.3))
    pva = pvs * (umidade_relativa / 100.0)
    dvp = pvs - pva
    return dvp

def calcular_volume_irrigacao(radiacao_solar_externa_mj, kc):
    radiacao_interna = radiacao_solar_externa_mj * TRANSMISSIVIDADE_ESTUFA
    eto_mm_dia = radiacao_interna * FATOR_CONVERSAO_RADIACAO_ETO
    etc_mm_dia = eto_mm_dia * kc
    litros_por_m2 = etc_mm_dia
    litros_por_planta = litros_por_m2 / DENSIDADE_PLANTAS
    volume_total_irrigacao_planta = litros_por_planta * FRACAO_LIXIVIACAO
    return volume_total_irrigacao_planta

# ==============================================================================
# M√ìDULO DE INTERFACE (Streamlit)
# (Substitui os M√≥dulos 1, 5 e 6)
# ==============================================================================

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(
    page_title="C√©rebro Fertirriga√ß√£o V1.2",
    page_icon="üß†",
    layout="wide"
)

# --- L√ìGICA DE CAPTURA DE LEAD (O "PORT√ÉO") ---
if 'lead_captured' not in st.session_state:
    st.session_state.lead_captured = False

if not st.session_state.lead_captured:
    st.title("Bem-vindo ao üß† C√©rebro V1.2")
    st.subheader("Seu Concierge Pessoal de Fertirriga√ß√£o")
    st.markdown("""
    Para acessar a ferramenta de recomenda√ß√£o, por favor, insira seus dados. 
    Prometemos n√£o enviar spam, apenas informa√ß√µes relevantes sobre o projeto!
    """)
    
    with st.form(key='lead_form'):
        nome = st.text_input("Seu Nome *")
        email = st.text_input("Seu E-mail *")
        submit_button = st.form_submit_button(label='Acessar Ferramenta')

        if submit_button:
            if not nome or not email:
                st.error("Por favor, preencha todos os campos obrigat√≥rios.")
            else:
                # --- PR√ìXIMO PASSO (V1.3): Salvar o Lead ---
                # Aqui voc√™ adicionaria o c√≥digo para salvar o (nome, email)
                # em um Google Sheet ou banco de dados.
                # Por enquanto, apenas "desbloqueamos" o app.
                st.session_state.lead_captured = True
                st.session_state.user_name = nome
                st.rerun() # Recarrega a p√°gina no modo "logado"

# --- O APLICATIVO PRINCIPAL (Se o lead foi capturado) ---
else:
    st.title(f"üß† C√©rebro V1.2: Concierge")
    st.markdown(f"**Ol√°, {st.session_state.user_name}!** Pronto para a recomenda√ß√£o do dia.")
    
    # --- M√ìDULO 1: Inputs (agora na Barra Lateral) ---
    st.sidebar.header("M√≥dulo 1: Dados do Cliente")
    in_cidade = st.sidebar.text_input('Cidade:', value='Pitimbu')
    in_estado = st.sidebar.text_input('Estado (Sigla):', value='PB')
    in_estagio = st.sidebar.selectbox(
        'Est√°gio Fenol√≥gico:',
        options=list(receituario_agronomico.keys()),
        index=1 # Padr√£o "Florescimento"
    )
    in_temp_max_int = st.sidebar.number_input('Temp. M√°x. Interna (24h):', value=30.0, format="%.1f")
    in_temp_min_int = st.sidebar.number_input('Temp. M√≠n. Interna (24h):', value=20.0, format="%.1f")
    in_umidade_media_int = st.sidebar.number_input('Umidade M√©dia Interna (%):', value=70.0, format="%.1f")
    in_ec_drenado = st.sidebar.number_input('EC da Solu√ß√£o Drenada (mS/cm):', value=2.8, format="%.1f")
    
    st.divider()

    # --- M√ìDULO 5: Recomenda√ß√£o Estrat√©gica (Principal) ---
    st.header("M√≥dulo 5: Recomenda√ß√£o Estrat√©gica (Di√°ria)")
    
    if st.button('Gerar Recomenda√ß√£o (V1.2)', type="primary"):
        with st.spinner("Processando... Buscando dados de clima e rodando o c√©rebro..."):
            
            # --- L√≥gica de Gera√ß√£o (copiada do M√≥dulo 5, V1.2) ---
            try:
                # 1. Coleta de API
                lat, long, nome_cidade_api = get_lat_long(in_cidade, in_estado)
                if lat is None: raise Exception("Falha no Geocoding.")
                
                dados_clima = get_previsao_clima(lat, long)
                if dados_clima is None: raise Exception("Falha ao buscar clima.")
                
                radiacao_prevista = dados_clima['solar_radiation_sum']

                # 2. Busca Receitu√°rio
                parametros = receituario_agronomico[in_estagio]
                ec_ideal_base = parametros['ec_ideal_solucao']
                ph_ideal = parametros['ph_ideal_solucao']
                dvp_meta = parametros['meta_deficit_pressao_vapor_kpa']
                kc_atual = parametros['kc']

                # 3. L√≥gica de √Ågua e Frequ√™ncia
                if radiacao_prevista > 24: recomendacao_agua_freq = "Alta (12-16 pulsos)"
                elif radiacao_prevista < 15: recomendacao_agua_freq = "Baixa (6-8 pulsos)"
                else: recomendacao_agua_freq = "Padr√£o (8-12 pulsos)"
                
                recomendacao_agua_vol = calcular_volume_irrigacao(radiacao_prevista, kc_atual)
                fracao_lix_base = (FRACAO_LIXIVIACAO - 1) * 100
                nota_lixiviacao = f"(Nota: Volume inclui {fracao_lix_base:.0f}% de lixivia√ß√£o)"

                # 4. L√≥gica de Nutrientes (Ajuste Clima + Flush)
                ec_ajuste_clima = 0.0
                if radiacao_prevista > 25:
                    ec_ajuste_clima = -0.2
                    nota_ajuste_clima = f"(EC reduzido em 0.2 devido √† alta radia√ß√£o prevista de {radiacao_prevista} MJ/m¬≤)"
                elif radiacao_prevista < 12:
                    ec_ajuste_clima = 0.2
                    nota_ajuste_clima = f"(EC aumentado em 0.2 devido √† baixa radia√ß√£o prevista de {radiacao_prevista} MJ/m¬≤)"
                else:
                    nota_ajuste_clima = "(EC padr√£o para esta radia√ß√£o)"
                
                ec_ideal_ajustado = ec_ideal_base + ec_ajuste_clima
                delta_ec = in_ec_drenado - ec_ideal_ajustado
                
                if delta_ec > 0.5:
                    fator_flush = 1.15 
                    recomendacao_agua_vol *= fator_flush
                    acao_nutrientes = (f"**ATEN√á√ÉO:** Risco de salinidade. O EC do dreno ({in_ec_drenado:.1f} mS/cm) est√° alto.\n"
                                       f"   - O volume de √°gua j√° foi aumentado em 15% para lixiviar (lavar) o substrato.\n" 
                                       f"   - Reduzir o EC da solu√ß√£o nutritiva para {ec_ideal_ajustado - 0.2:.1f} mS/cm temporariamente.")
                    nota_lixiviacao = f"*(Nota: Volume inclui {fracao_lix_base:.0f}% de lixivia√ß√£o + 15% de 'flush' para lavagem de sais.)*"
                elif delta_ec < -0.5:
                    acao_nutrientes = (f"**INFO:** A planta est√° absorvendo nutrientes ativamente. O EC do dreno ({in_ec_drenado:.1f} mS/cm) est√° baixo.\n"
                                       f"   - Aumentar o EC da solu√ß√£o nutritiva para {ec_ideal_ajustado + 0.2:.1f} mS/cm.")
                else:
                    acao_nutrientes = (f"**OK:** O EC do dreno ({in_ec_drenado:.1f} mS/cm) est√° pr√≥ximo da meta.\n"
                                       f"   - Manter o EC da solu√ß√£o nutritiva em {ec_ideal_ajustado:.1f} mS/cm.")

                # 5. L√≥gica de Ambiente (DVP)
                temp_media_int = (in_temp_max_int + in_temp_min_int) / 2.0
                dvp_calculado = calcular_dvp(temp_media_int, in_umidade_media_int)
                alerta_ambiente_str = ""
                
                if dvp_calculado > (dvp_meta + 0.3): 
                    alerta_ambiente_str = f"   - **[ALERTA DE ESTRESSE]**\n"
                    acao_ambiente = (f"O DVP calculado ({dvp_calculado:.2f} kPa) est√° acima da meta ({dvp_meta} kPa).\n"
                                     f"   - O ar est√° seco, aumentando o risco de estresse h√≠drico e defici√™ncia de C√°lcio (fundo-preto).\n"
                                     f"   - **A√á√ÉO:** Aumentar a FREQU√äNCIA dos pulsos (conforme sugerido) para manter o substrato √∫mido.\n"
                                     f"   - Se dispon√≠vel, acionar nebuliza√ß√£o/sombreamento.")
                    recomendacao_agua_freq = f"{recomendacao_agua_freq} (AUMENTADA DEVIDO AO DVP ALTO)"
                elif dvp_calculado < (dvp_meta - 0.4):
                    alerta_ambiente_str = f"   - **[ALERTA DE UMIDADE]**\n"
                    acao_ambiente = (f"O DVP calculado ({dvp_calculado:.2f} kPa) est√° muito baixo ({dvp_meta} kPa).\n"
                                     f"   - O ar est√° muito √∫mido, reduzindo a transpira√ß√£o e o risco de doen√ßas f√∫ngicas.\n"
                                     f"   - **A√á√ÉO:** Aumentar a ventila√ß√£o da estufa (abrir janelas/ventoinhas) para renovar o ar.")
                else:
                    acao_ambiente = f"**OK:** O DVP calculado ({dvp_calculado:.2f} kPa) est√° dentro da faixa ideal (Meta: {dvp_meta} kPa)."

                # --- SUCESSO: Exibe o Output ---
                data_hoje = datetime.date.today().strftime("%d/%m/%Y")
                st.markdown(f"## --- RECOMENDA√á√ÉO DE FERTIRRIGA√á√ÉO ({data_hoje}) ---")
                st.markdown(f"**Cultura:** Tomate Grape (Est√°gio: {in_estagio})\n**Local:** {nome_cidade_api}, {in_estado}")
                
                st.subheader("1. GEST√ÉO DE √ÅGUA")
                st.markdown(f"*(Baseado em previs√£o de {radiacao_prevista:.2f} MJ/m¬≤ de radia√ß√£o)*")
                st.markdown(f"**Volume Total por Planta:** `{recomendacao_agua_vol:.2f} Litros/planta/dia`")
                st.markdown(f"**Sugest√£o de Frequ√™ncia:** `{recomendacao_agua_freq}`")
                st.caption(nota_lixiviacao)
                
                st.subheader("2. GEST√ÉO DE NUTRIENTES")
                st.markdown(f"**Meta de EC Base (Est√°gio):** `{ec_ideal_base} mS/cm`")
                st.markdown(f"**Meta de EC Ajustada (Clima):** `{ec_ideal_ajustado:.1f} mS/cm`")
                st.caption(nota_ajuste_clima)
                st.markdown(f"**Meta de pH da Solu√ß√£o:** `{ph_ideal}`")
                st.markdown(f"**A√á√ÉO:**\n {acao_nutrientes}")

                st.subheader("3. AN√ÅLISE DE AMBIENTE (INTERNO)")
                st.markdown(alerta_ambiente_str + "   - " + acao_ambiente)

            except Exception as e:
                st.error(f"Ocorreu um erro ao gerar a recomenda√ß√£o: {e}")
                st.error("Verifique os dados de entrada e a conex√£o com a API.")

    st.divider()

    # --- M√ìDULO 6: Check-Point T√°tico (em um Expander) ---
    with st.expander("M√≥dulo 6: Check-Point de Meio-Dia (Manejo T√°tico)"):
        
        st.markdown("Use esta se√ß√£o para uma an√°lise r√°pida (ex: 13h) e a√ß√µes imediatas.")
        
        # Inputs do M√≥dulo 6
        check_estagio = st.selectbox(
            'Est√°gio Fenol√≥gico (Check):',
            options=list(receituario_agronomico.keys()),
            index=1,
            key="check_estagio" # 'key' √© importante para diferenciar de outros widgets
        )
        check_temp_atual = st.number_input('Temp. Interna (AGORA):', value=32.0, format="%.1f")
        check_umidade_atual = st.number_input('Umidade Interna (AGORA %):', value=60.0, format="%.1f")
        check_ec_aplicado = st.number_input('EC da Solu√ß√£o (APLICADA):', value=2.4, format="%.1f")
        check_ec_dreno_atual = st.number_input('EC da Solu√ß√£o (DRENADA AGORA):', value=3.0, format="%.1f")

        if st.button("Analisar Check-Point"):
            with st.spinner("Analisando dados t√°ticos..."):
                
                # --- L√≥gica de Gera√ß√£o (copiada do M√≥dulo 6) ---
                parametros_check = receituario_agronomico[check_estagio]
                dvp_meta_check = parametros_check['meta_deficit_pressao_vapor_kpa']
                
                DVP_CRITICO = 1.8 
                dvp_atual = calcular_dvp(check_temp_atual, check_umidade_atual)
                alerta_ambiente_tatico_str = ""

                if dvp_atual > DVP_CRITICO:
                    alerta_ambiente_tatico_str = "**[ALERTA DE ESTRESSE AGUDO]**"
                    acao_ambiente_tatico = (f"O DVP atual ({dvp_atual:.2f} kPa) est√° acima do limite cr√≠tico ({DVP_CRITICO} kPa).\n"
                                            f"   - A planta est√° em forte estresse h√≠drico (risco de 'fundo-preto').\n"
                                            f"   - **A√á√ÉO IMEDIATA:** Aumentar a FREQU√äNCIA dos pulsos de irriga√ß√£o (ex: de 60 para 40 min).\n"
                                            f"   - Se dispon√≠vel, acionar nebuliza√ß√£o/sombreamento AGORA.")
                elif dvp_atual > (dvp_meta_check + 0.4):
                    alerta_ambiente_tatico_str = "**[ATEN√á√ÉO: Estresse Elevado]**"
                    acao_ambiente_tatico = (f"O DVP atual ({dvp_atual:.2f} kPa) est√° elevado (Meta: {dvp_meta_check} kPa).\n"
                                            f"   - Aumentar a frequ√™ncia dos pulsos de irriga√ß√£o para o restante da tarde.")
                else:
                    acao_ambiente_tatico = f"**OK:** O DVP atual ({dvp_atual:.2f} kPa) est√° dentro da faixa ideal."
                
                delta_ec_tatico = check_ec_dreno_atual - check_ec_aplicado
                DELTA_EC_CRITICO = 1.0
                alerta_nutricao_tatico_str = ""

                if delta_ec_tatico > DELTA_EC_CRITICO:
                    alerta_nutricao_tatico_str = "**[ALERTA DE AC√öMULO SALINO]**"
                    acao_nutricao_tatico = (f"O EC do dreno ({check_ec_dreno_atual:.1f} mS/cm) est√° muito acima do EC aplicado ({check_ec_aplicado:.1f} mS/cm).\n"
                                            f"   - Isso indica que a planta n√£o est√° conseguindo absorver a solu√ß√£o, e os sais est√£o concentrando r√°pido.\n"
                                            f"   - **A√á√ÉO IMEDIATA:** Realizar 1-2 pulsos de irriga√ß√£o com EC 50% mais baixo (ou √°gua pura) para lavar o substrato.")
                elif delta_ec_tatico < 0.2:
                    alerta_nutricao_tatico_str = "**[INFO: CONSUMO ALTO]**"
                    acao_nutricao_tatico = (f"O EC do dreno ({check_ec_dreno_atual:.1f} mS/cm) est√° muito pr√≥ximo (ou abaixo) do EC aplicado ({check_ec_aplicado:.1f} mS/cm).\n"
                                            f"   - A planta est√° consumindo nutrientes mais r√°pido do que a aplica√ß√£o.\n"
                                            f"   - **A√á√ÉO:** Considerar aumentar o EC da solu√ß√£o no pr√≥ximo preparo de tanque.")
                else:
                    acao_nutricao_tatico = f"**OK:** O EC do dreno ({check_ec_dreno_atual:.1f} mS/cm) est√° com um diferencial saud√°vel em rela√ß√£o ao aplicado ({check_ec_aplicado:.1f} mS/cm)."

                # --- Exibe o Output T√°tico ---
                data_check = datetime.datetime.now().strftime("%d/%m/%Y %H:%M:%S")
                st.markdown(f"### --- CHECK-POINT DE MANEJO ({data_check}) ---")
                
                st.subheader("1. AN√ÅLISE DE AMBIENTE (TEMPO REAL)")
                if alerta_ambiente_tatico_str: st.markdown(alerta_ambiente_tatico_str)
                st.markdown(acao_ambiente_tatico)
                
                st.subheader("2. AN√ÅLISE DE NUTRI√á√ÉO (TEMPO REAL)")
                if alerta_nutricao_tatico_str: st.markdown(alerta_nutricao_tatico_str)
                st.markdown(acao_nutricao_tatico)
# --- COLE ESTE C√ìDIGO NO FINAL DO SEU 'app.py' ---
# (Ainda dentro do 'else' principal, ap√≥s o 'expander' do M√≥dulo 6)

    st.divider()

    # --- M√ìDULO 9: Detetive de Sintomas ---
    with st.expander("M√≥dulo 9: Detetive de Sintomas üïµÔ∏è"):
        
        st.markdown("""
        Selecione os sintomas que voc√™ est√° vendo na sua planta para um
        poss√≠vel diagn√≥stico focado em nutri√ß√£o e ambiente.
        """)
        
        # --- Base de Conhecimento de Diagn√≥stico ---
        # (Um sistema especialista simples em forma de dicion√°rio)
        diagnostico_db = {
            "Frutos": {
                "Mancha escura/aquosa no fundo (oposto ao caule)": {
                    "diagnostico": "Defici√™ncia de C√°lcio (Fisiol√≥gica) - 'Fundo-Preto' (Blossom-End Rot)",
                    "causa_provavel": (
                        "Este √© um problema cl√°ssico de **transporte de C√°lcio**, n√£o de falta dele na solu√ß√£o.\n\n"
                        "Causas Comuns:\n"
                        "1. **Estresse H√≠drico (DVP Alto):** O ar est√° muito seco (DVP > 1.5 kPa). A planta transpira muito r√°pido, e o 'pux√£o' de √°gua √© t√£o forte que ela n√£o consegue levar o C√°lcio (que √© um nutriente 'pregui√ßoso') at√© a ponta do fruto.\n"
                        "2. **Ac√∫mulo de Sais (EC do Dreno Alto):** O EC do substrato est√° muito alto (ex: > 3.5 mS/cm). O excesso de outros sais (K, Mg) compete com o C√°lcio e 'bloqueia' sua absor√ß√£o pela raiz."
                    ),
                    "acao_recomendada": (
                        "**A√á√ÉO IMEDIATA:**\n"
                        "1. Use o **M√≥dulo 6** para checar o DVP e o EC do dreno *agora*.\n"
                        "2. Se o DVP estiver alto, aumente a **FREQU√äNCIA** dos pulsos de irriga√ß√£o para manter o substrato sempre √∫mido.\n"
                        "3. Se o EC do dreno estiver alto, realize um **FLUSH** (conforme M√≥dulo 6) para lavar os sais."
                    ),
                    "style": "error" # Mostra como um alerta vermelho
                },
                "Rachaduras (principalmente perto do caule)": {
                    "diagnostico": "Rachaduras por Press√£o (Cracking)",
                    "causa_provavel": (
                        "Isso √© causado por uma **mudan√ßa brusca na absor√ß√£o de √°gua**.\n\n"
                        "A casca do fruto 'endureceu' durante um per√≠odo de estresse ou crescimento lento (dias nublados, EC alto), e de repente a planta absorveu muita √°gua (dia de sol forte, ou uma rega muito volumosa ap√≥s um per√≠odo seco), 'inflando' o fruto mais r√°pido do que a casca pode aguentar."
                    ),
                    "acao_recomendada": (
                        "**A√á√ÉO PREVENTIVA:**\n"
                        "1. Mantenha a irriga√ß√£o e o EC do substrato o mais **constante** poss√≠vel (evite 'altos e baixos').\n"
                        "2. Use o **M√≥dulo 5** diariamente para ajustar o volume de √°gua √† previs√£o de radia√ß√£o, evitando excessos em dias nublados e falta em dias de sol."
                    ),
                    "style": "warning" # Mostra como um alerta amarelo
                }
            },
            "Folhas Novas (Ponteiro)": {
                "Amareladas (nervuras verdes, resto amarelo)": {
                    "diagnostico": "Defici√™ncia de Ferro (Clorose F√©rrica)",
                    "causa_provavel": (
                        "Geralmente n√£o √© falta de Ferro na solu√ß√£o, mas sim um **bloqueio de absor√ß√£o**.\n\n"
                        "Causa Comum:\n"
                        "1. **pH da Solu√ß√£o Nutritiva Alto:** O pH na zona da raiz est√° acima de 6.2-6.5. O Ferro (e outros micronutrientes como Mangan√™s) se torna insol√∫vel e a planta n√£o consegue absorv√™-lo."
                    ),
                    "acao_recomendada": (
                        "**A√á√ÉO IMEDIATA:**\n"
                        "1. Verifique o **pH da sua solu√ß√£o nutritiva** e o **pH do seu dreno**.\n"
                        "2. Certifique-se de que a sua meta de pH (definida no M√≥dulo 5, ex: 5.8) est√° sendo atingida. Ajuste seu dosador de √°cido se necess√°rio."
                    ),
                    "style": "warning"
                },
                "Folhas pequenas, deformadas ou 'queimadas' na ponta": {
                    "diagnostico": "Defici√™ncia de C√°lcio (Sist√™mico) ou Boro",
                    "causa_provavel": (
                        "Similar ao 'Fundo-Preto' no fruto, isso indica um problema de **transporte de C√°lcio** para os pontos de crescimento mais novos (o 'ponteiro').\n\n"
                        "Causa Comum:\n"
                        "1. **DVP Muito Baixo (Umidade Alta):** O ar est√° muito √∫mido (DVP < 0.5 kPa). A planta n√£o consegue transpirar, e sem transpira√ß√£o, n√£o h√° 'pux√£o' de √°gua para levar o C√°lcio at√© as folhas novas.\n"
                        "2. **DVP Muito Alto (Estresse):** O estresse √© t√£o grande que o fluxo de √°gua √© interrompido."
                    ),
                    "acao_recomendada": (
                        "**A√á√ÉO IMEDIATA:**\n"
                        "1. Use o **M√≥dulo 6** para checar o DVP.\n"
                        "2. Se o DVP estiver **muito baixo** (muito √∫mido), aumente a ventila√ß√£o da estufa (abra janelas/ventoinhas) para for√ßar a transpira√ß√£o.\n"
                        "3. Se o DVP estiver **muito alto**, siga as recomenda√ß√µes de aumentar a frequ√™ncia de rega."
                    ),
                    "style": "error"
                }
            },
            "Folhas Velhas (Baixeiro)": {
                "Amarelamento geral (come√ßa nas pontas e avan√ßa)": {
                    "diagnostico": "Defici√™ncia de Nitrog√™nio (N)",
                    "causa_provavel": (
                        "A planta est√° 'passando fome' e 'comendo' seus pr√≥prios tecidos. O Nitrog√™nio √© um nutriente m√≥vel, ent√£o a planta o retira das folhas velhas (menos importantes) para enviar √†s folhas novas (crescimento).\n\n"
                        "Causa Comum:\n"
                        "1. **EC da Solu√ß√£o Aplicada Muito Baixo:** O EC alvo (definido no M√≥dulo 5) est√° abaixo da demanda da planta para o est√°gio atual."
                    ),
                    "acao_recomendada": (
                        "**A√á√ÉO IMEDIATA:**\n"
                        "1. Verifique o EC da solu√ß√£o que voc√™ est√° aplicando. Ele est√° de acordo com a meta do **M√≥dulo 5**?\n"
                        "2. Use o **M√≥dulo 6** para checar o Delta de EC. Se o EC do dreno estiver *abaixo* do EC aplicado, √© um sinal claro de alto consumo. Aumente o EC da sua solu√ß√£o."
                    ),
                    "style": "warning"
                },
                "Amarelamento entre as nervuras (V invertido)": {
                    "diagnostico": "Defici√™ncia de Magn√©sio (Mg)",
                    "causa_provavel": (
                        "O Magn√©sio √© o centro da mol√©cula de clorofila. A planta o retira das folhas velhas para as novas.\n\n"
                        "Causa Comum:\n"
                        "1. **EC da Solu√ß√£o Aplicada Muito Baixo** (similar ao Nitrog√™nio).\n"
                        "2. **Excesso de Pot√°ssio (K):** O Pot√°ssio (K) compete diretamente com o Magn√©sio (Mg) pela absor√ß√£o. Se o EC do seu dreno est√° muito alto (M√≥dulo 6), o excesso de K pode estar bloqueando o Mg."
                    ),
                    "acao_recomendada": (
                        "**A√á√ÉO IMEDIATA:**\n"
                        "1. Verifique o EC da solu√ß√£o aplicada (M√≥dulo 5).\n"
                        "2. Verifique se h√° ac√∫mulo de sais no dreno (M√≥dulo 6). Se o EC do dreno estiver alto, aplique um 'flush' para reequilibrar os nutrientes no substrato."
                    ),
                    "style": "warning"
                }
            }
        }
        
        # --- L√≥gica do Fluxograma ---
        
        # Pergunta 1: Local do Sintoma
        q1_options = ["---", "Frutos", "Folhas Novas (Ponteiro)", "Folhas Velhas (Baixeiro)"]
        q1 = st.selectbox("1. Onde o sintoma √© mais vis√≠vel?", options=q1_options)
        
        # Pergunta 2: Sintoma Espec√≠fico
        if q1 in diagnostico_db:
            q2_options = ["---"] + list(diagnostico_db[q1].keys())
            q2 = st.selectbox("2. Qual √© o sintoma espec√≠fico?", options=q2_options)
            
            # Resposta Final: Diagn√≥stico
            if q2 in diagnostico_db[q1]:
                resultado = diagnostico_db[q1][q2]
                
                st.subheader(f"Poss√≠vel Diagn√≥stico: {resultado['diagnostico']}")
                
                # Exibe o diagn√≥stico com o estilo correto
                if resultado['style'] == 'error':
                    st.error(f"**Causa Prov√°vel:**\n{resultado['causa_provavel']}")
                else:
                    st.warning(f"**Causa Prov√°vel:**\n{resultado['causa_provavel']}")
                
                st.info(f"**A√ß√£o Recomendada (Pelo C√©rebro):**\n{resultado['acao_recomendada']}")
